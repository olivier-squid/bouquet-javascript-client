/**
 * Bouquet
 * This is Bouquet API
 *
 * OpenAPI spec version: 4.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AccessRight', 'model/DataTable', 'model/DimensionPK', 'model/DomainPK', 'model/Error', 'model/FacetExpression', 'model/FacetSelection', 'model/Index', 'model/Metric', 'model/MetricPK', 'model/OrderBy', 'model/ProjectAnalysisJobPK', 'model/RollUp', 'model/Statistics'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./AccessRight'), require('./DataTable'), require('./DimensionPK'), require('./DomainPK'), require('./Error'), require('./FacetExpression'), require('./FacetSelection'), require('./Index'), require('./Metric'), require('./MetricPK'), require('./OrderBy'), require('./ProjectAnalysisJobPK'), require('./RollUp'), require('./Statistics'));
  } else {
    // Browser globals (root is window)
    if (!root.Bouquet) {
      root.Bouquet = {};
    }
    root.Bouquet.ProjectAnalysisJob = factory(root.Bouquet.ApiClient, root.Bouquet.AccessRight, root.Bouquet.DataTable, root.Bouquet.DimensionPK, root.Bouquet.DomainPK, root.Bouquet.Error, root.Bouquet.FacetExpression, root.Bouquet.FacetSelection, root.Bouquet.Index, root.Bouquet.Metric, root.Bouquet.MetricPK, root.Bouquet.OrderBy, root.Bouquet.ProjectAnalysisJobPK, root.Bouquet.RollUp, root.Bouquet.Statistics);
  }
}(this, function(ApiClient, AccessRight, DataTable, DimensionPK, DomainPK, Error, FacetExpression, FacetSelection, Index, Metric, MetricPK, OrderBy, ProjectAnalysisJobPK, RollUp, Statistics) {
  'use strict';




  /**
   * The ProjectAnalysisJob model module.
   * @module model/ProjectAnalysisJob
   * @version 4.2
   */

  /**
   * Constructs a new <code>ProjectAnalysisJob</code>.
   * @alias module:model/ProjectAnalysisJob
   * @class
   */
  var exports = function() {
    var _this = this;



























  };

  /**
   * Constructs a <code>ProjectAnalysisJob</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ProjectAnalysisJob} obj Optional instance to populate.
   * @return {module:model/ProjectAnalysisJob} The populated <code>ProjectAnalysisJob</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ProjectAnalysisJobPK.constructFromObject(data['id']);
      }
      if (data.hasOwnProperty('accessRights')) {
        obj['accessRights'] = ApiClient.convertToType(data['accessRights'], [AccessRight]);
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
      if (data.hasOwnProperty('error')) {
        obj['error'] = Error.constructFromObject(data['error']);
      }
      if (data.hasOwnProperty('statistics')) {
        obj['statistics'] = Statistics.constructFromObject(data['statistics']);
      }
      if (data.hasOwnProperty('resultsSize')) {
        obj['resultsSize'] = ApiClient.convertToType(data['resultsSize'], 'Number');
      }
      if (data.hasOwnProperty('temporary')) {
        obj['temporary'] = ApiClient.convertToType(data['temporary'], 'Boolean');
      }
      if (data.hasOwnProperty('autoRun')) {
        obj['autoRun'] = ApiClient.convertToType(data['autoRun'], 'Boolean');
      }
      if (data.hasOwnProperty('creationTime')) {
        obj['creationTime'] = ApiClient.convertToType(data['creationTime'], 'Number');
      }
      if (data.hasOwnProperty('domains')) {
        obj['domains'] = ApiClient.convertToType(data['domains'], [DomainPK]);
      }
      if (data.hasOwnProperty('dimensions')) {
        obj['dimensions'] = ApiClient.convertToType(data['dimensions'], [DimensionPK]);
      }
      if (data.hasOwnProperty('metrics')) {
        obj['metrics'] = ApiClient.convertToType(data['metrics'], [MetricPK]);
      }
      if (data.hasOwnProperty('metricList')) {
        obj['metricList'] = ApiClient.convertToType(data['metricList'], [Metric]);
      }
      if (data.hasOwnProperty('facets')) {
        obj['facets'] = ApiClient.convertToType(data['facets'], [FacetExpression]);
      }
      if (data.hasOwnProperty('rollups')) {
        obj['rollups'] = ApiClient.convertToType(data['rollups'], [RollUp]);
      }
      if (data.hasOwnProperty('selection')) {
        obj['selection'] = FacetSelection.constructFromObject(data['selection']);
      }
      if (data.hasOwnProperty('orderBy')) {
        obj['orderBy'] = ApiClient.convertToType(data['orderBy'], [OrderBy]);
      }
      if (data.hasOwnProperty('offset')) {
        obj['offset'] = ApiClient.convertToType(data['offset'], 'Number');
      }
      if (data.hasOwnProperty('limit')) {
        obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
      }
      if (data.hasOwnProperty('beyondLimit')) {
        obj['beyondLimit'] = ApiClient.convertToType(data['beyondLimit'], [Index]);
      }
      if (data.hasOwnProperty('optionKeys')) {
        obj['optionKeys'] = ApiClient.convertToType(data['optionKeys'], {'String': Object});
      }
      if (data.hasOwnProperty('results')) {
        obj['results'] = DataTable.constructFromObject(data['results']);
      }
      if (data.hasOwnProperty('oid')) {
        obj['oid'] = ApiClient.convertToType(data['oid'], 'String');
      }
      if (data.hasOwnProperty('objectType')) {
        obj['objectType'] = ApiClient.convertToType(data['objectType'], 'String');
      }
      if (data.hasOwnProperty('_role')) {
        obj['_role'] = ApiClient.convertToType(data['_role'], 'String');
      }
      if (data.hasOwnProperty('_vctrl')) {
        obj['_vctrl'] = ApiClient.convertToType(data['_vctrl'], 'Number');
      }
    }
    return obj;
  }

  /**
   * The object Composite Id (Primary Key)
   * @member {module:model/ProjectAnalysisJobPK} id
   */
  exports.prototype['id'] = undefined;
  /**
   * The ACL for this object
   * @member {Array.<module:model/AccessRight>} accessRights
   */
  exports.prototype['accessRights'] = undefined;
  /**
   * @member {module:model/ProjectAnalysisJob.StatusEnum} status
   */
  exports.prototype['status'] = undefined;
  /**
   * @member {module:model/Error} error
   */
  exports.prototype['error'] = undefined;
  /**
   * @member {module:model/Statistics} statistics
   */
  exports.prototype['statistics'] = undefined;
  /**
   * @member {Number} resultsSize
   */
  exports.prototype['resultsSize'] = undefined;
  /**
   * @member {Boolean} temporary
   * @default false
   */
  exports.prototype['temporary'] = false;
  /**
   * @member {Boolean} autoRun
   * @default false
   */
  exports.prototype['autoRun'] = false;
  /**
   * @member {Number} creationTime
   */
  exports.prototype['creationTime'] = undefined;
  /**
   * @member {Array.<module:model/DomainPK>} domains
   */
  exports.prototype['domains'] = undefined;
  /**
   * @member {Array.<module:model/DimensionPK>} dimensions
   */
  exports.prototype['dimensions'] = undefined;
  /**
   * @member {Array.<module:model/MetricPK>} metrics
   */
  exports.prototype['metrics'] = undefined;
  /**
   * @member {Array.<module:model/Metric>} metricList
   */
  exports.prototype['metricList'] = undefined;
  /**
   * @member {Array.<module:model/FacetExpression>} facets
   */
  exports.prototype['facets'] = undefined;
  /**
   * compute rollup on the given dimensions. It is a list of indices that references the dimension in either dimensions or facets list. In order to compute a grand-total, use id=-1 (it should be the first in the list). If several levels are defined, the analysis will compute sub-total for: (level0), then (level0,level1)... If a rollup is specified, the resulting DataTable will have a new column 'GROUPING_ID' in first position that will return 0 if the row is the grand-total, 1 for the first level sub-total, ... and null if it is not a rollup row.
   * @member {Array.<module:model/RollUp>} rollups
   */
  exports.prototype['rollups'] = undefined;
  /**
   * @member {module:model/FacetSelection} selection
   */
  exports.prototype['selection'] = undefined;
  /**
   * @member {Array.<module:model/OrderBy>} orderBy
   */
  exports.prototype['orderBy'] = undefined;
  /**
   * @member {Number} offset
   */
  exports.prototype['offset'] = undefined;
  /**
   * @member {Number} limit
   */
  exports.prototype['limit'] = undefined;
  /**
   * @member {Array.<module:model/Index>} beyondLimit
   */
  exports.prototype['beyondLimit'] = undefined;
  /**
   * @member {Object.<String, Object>} optionKeys
   */
  exports.prototype['optionKeys'] = undefined;
  /**
   * @member {module:model/DataTable} results
   */
  exports.prototype['results'] = undefined;
  /**
   * The Object Id
   * @member {String} oid
   */
  exports.prototype['oid'] = undefined;
  /**
   * @member {String} objectType
   */
  exports.prototype['objectType'] = undefined;
  /**
   * The role of the current User (passed in the context) over this object
   * @member {module:model/ProjectAnalysisJob.RoleEnum} _role
   */
  exports.prototype['_role'] = undefined;
  /**
   * Internal version control value. (used by optimistic-locking mechanism)
   * @member {Number} _vctrl
   */
  exports.prototype['_vctrl'] = undefined;


  /**
   * Allowed values for the <code>status</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StatusEnum = {
    /**
     * value: "PENDING"
     * @const
     */
    "PENDING": "PENDING",
    /**
     * value: "RUNNING"
     * @const
     */
    "RUNNING": "RUNNING",
    /**
     * value: "DONE"
     * @const
     */
    "DONE": "DONE"  };

  /**
   * Allowed values for the <code>_role</code> property.
   * @enum {String}
   * @readonly
   */
  exports.RoleEnum = {
    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE",
    /**
     * value: "EXECUTE"
     * @const
     */
    "EXECUTE": "EXECUTE",
    /**
     * value: "READ"
     * @const
     */
    "READ": "READ",
    /**
     * value: "WRITE"
     * @const
     */
    "WRITE": "WRITE",
    /**
     * value: "OWNER"
     * @const
     */
    "OWNER": "OWNER"  };


  return exports;
}));


