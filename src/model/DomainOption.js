/**
 * Bouquet
 * This is Bouquet API
 *
 * OpenAPI spec version: 4.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/DomainPK', 'model/ProjectAnalysisJob'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./DomainPK'), require('./ProjectAnalysisJob'));
  } else {
    // Browser globals (root is window)
    if (!root.Bouquet) {
      root.Bouquet = {};
    }
    root.Bouquet.DomainOption = factory(root.Bouquet.ApiClient, root.Bouquet.DomainPK, root.Bouquet.ProjectAnalysisJob);
  }
}(this, function(ApiClient, DomainPK, ProjectAnalysisJob) {
  'use strict';




  /**
   * The DomainOption model module.
   * @module model/DomainOption
   * @version 4.2
   */

  /**
   * Constructs a new <code>DomainOption</code>.
   * @alias module:model/DomainOption
   * @class
   */
  var exports = function() {
    var _this = this;










  };

  /**
   * Constructs a <code>DomainOption</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DomainOption} obj Optional instance to populate.
   * @return {module:model/DomainOption} The populated <code>DomainOption</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('shortcut')) {
        obj['shortcut'] = ApiClient.convertToType(data['shortcut'], 'String');
      }
      if (data.hasOwnProperty('analysisJob')) {
        obj['analysisJob'] = ProjectAnalysisJob.constructFromObject(data['analysisJob']);
      }
      if (data.hasOwnProperty('sourceProjectId')) {
        obj['sourceProjectId'] = ApiClient.convertToType(data['sourceProjectId'], 'String');
      }
      if (data.hasOwnProperty('destSchema')) {
        obj['destSchema'] = ApiClient.convertToType(data['destSchema'], 'String');
      }
      if (data.hasOwnProperty('destProjectId')) {
        obj['destProjectId'] = ApiClient.convertToType(data['destProjectId'], 'String');
      }
      if (data.hasOwnProperty('reinjected')) {
        obj['reinjected'] = ApiClient.convertToType(data['reinjected'], 'Boolean');
      }
      if (data.hasOwnProperty('dependencies')) {
        obj['dependencies'] = ApiClient.convertToType(data['dependencies'], [DomainPK]);
      }
      if (data.hasOwnProperty('alink')) {
        obj['alink'] = ApiClient.convertToType(data['alink'], 'Boolean');
      }
      if (data.hasOwnProperty('linkSource')) {
        obj['linkSource'] = ApiClient.convertToType(data['linkSource'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {String} shortcut
   */
  exports.prototype['shortcut'] = undefined;
  /**
   * @member {module:model/ProjectAnalysisJob} analysisJob
   */
  exports.prototype['analysisJob'] = undefined;
  /**
   * @member {String} sourceProjectId
   */
  exports.prototype['sourceProjectId'] = undefined;
  /**
   * @member {String} destSchema
   */
  exports.prototype['destSchema'] = undefined;
  /**
   * @member {String} destProjectId
   */
  exports.prototype['destProjectId'] = undefined;
  /**
   * @member {Boolean} reinjected
   * @default false
   */
  exports.prototype['reinjected'] = false;
  /**
   * @member {Array.<module:model/DomainPK>} dependencies
   */
  exports.prototype['dependencies'] = undefined;
  /**
   * @member {Boolean} alink
   * @default false
   */
  exports.prototype['alink'] = false;
  /**
   * @member {String} linkSource
   */
  exports.prototype['linkSource'] = undefined;



  return exports;
}));


