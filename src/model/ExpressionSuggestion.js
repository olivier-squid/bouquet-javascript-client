/**
 * Bouquet
 * This is Bouquet API
 *
 * OpenAPI spec version: 4.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ExpressionSuggestionItem'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ExpressionSuggestionItem'));
  } else {
    // Browser globals (root is window)
    if (!root.Bouquet) {
      root.Bouquet = {};
    }
    root.Bouquet.ExpressionSuggestion = factory(root.Bouquet.ApiClient, root.Bouquet.ExpressionSuggestionItem);
  }
}(this, function(ApiClient, ExpressionSuggestionItem) {
  'use strict';




  /**
   * The ExpressionSuggestion model module.
   * @module model/ExpressionSuggestion
   * @version 4.2
   */

  /**
   * Constructs a new <code>ExpressionSuggestion</code>.
   * @alias module:model/ExpressionSuggestion
   * @class
   */
  var exports = function() {
    var _this = this;









  };

  /**
   * Constructs a <code>ExpressionSuggestion</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ExpressionSuggestion} obj Optional instance to populate.
   * @return {module:model/ExpressionSuggestion} The populated <code>ExpressionSuggestion</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('suggestions')) {
        obj['suggestions'] = ApiClient.convertToType(data['suggestions'], [ExpressionSuggestionItem]);
      }
      if (data.hasOwnProperty('definitions')) {
        obj['definitions'] = ApiClient.convertToType(data['definitions'], ['String']);
      }
      if (data.hasOwnProperty('validateMessage')) {
        obj['validateMessage'] = ApiClient.convertToType(data['validateMessage'], 'String');
      }
      if (data.hasOwnProperty('filterIndex')) {
        obj['filterIndex'] = ApiClient.convertToType(data['filterIndex'], 'Number');
      }
      if (data.hasOwnProperty('beginInsertPos')) {
        obj['beginInsertPos'] = ApiClient.convertToType(data['beginInsertPos'], 'Number');
      }
      if (data.hasOwnProperty('endInsertPos')) {
        obj['endInsertPos'] = ApiClient.convertToType(data['endInsertPos'], 'Number');
      }
      if (data.hasOwnProperty('filter')) {
        obj['filter'] = ApiClient.convertToType(data['filter'], 'String');
      }
      if (data.hasOwnProperty('valueType')) {
        obj['valueType'] = ApiClient.convertToType(data['valueType'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {Array.<module:model/ExpressionSuggestionItem>} suggestions
   */
  exports.prototype['suggestions'] = undefined;
  /**
   * @member {Array.<String>} definitions
   */
  exports.prototype['definitions'] = undefined;
  /**
   * @member {String} validateMessage
   */
  exports.prototype['validateMessage'] = undefined;
  /**
   * @member {Number} filterIndex
   */
  exports.prototype['filterIndex'] = undefined;
  /**
   * @member {Number} beginInsertPos
   */
  exports.prototype['beginInsertPos'] = undefined;
  /**
   * @member {Number} endInsertPos
   */
  exports.prototype['endInsertPos'] = undefined;
  /**
   * @member {String} filter
   */
  exports.prototype['filter'] = undefined;
  /**
   * @member {module:model/ExpressionSuggestion.ValueTypeEnum} valueType
   */
  exports.prototype['valueType'] = undefined;


  /**
   * Allowed values for the <code>valueType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ValueTypeEnum = {
    /**
     * value: "OBJECT"
     * @const
     */
    "OBJECT": "OBJECT",
    /**
     * value: "NUMERIC"
     * @const
     */
    "NUMERIC": "NUMERIC",
    /**
     * value: "AGGREGATE"
     * @const
     */
    "AGGREGATE": "AGGREGATE",
    /**
     * value: "DATE"
     * @const
     */
    "DATE": "DATE",
    /**
     * value: "STRING"
     * @const
     */
    "STRING": "STRING",
    /**
     * value: "CONDITION"
     * @const
     */
    "CONDITION": "CONDITION",
    /**
     * value: "LINK"
     * @const
     */
    "LINK": "LINK",
    /**
     * value: "TABLE"
     * @const
     */
    "TABLE": "TABLE",
    /**
     * value: "VIEW"
     * @const
     */
    "VIEW": "VIEW",
    /**
     * value: "DOMAIN"
     * @const
     */
    "DOMAIN": "DOMAIN",
    /**
     * value: "OTHER"
     * @const
     */
    "OTHER": "OTHER",
    /**
     * value: "ERROR"
     * @const
     */
    "ERROR": "ERROR"  };


  return exports;
}));


