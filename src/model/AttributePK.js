/**
 * Bouquet
 * This is Bouquet API
 *
 * OpenAPI spec version: 4.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Bouquet) {
      root.Bouquet = {};
    }
    root.Bouquet.AttributePK = factory(root.Bouquet.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The AttributePK model module.
   * @module model/AttributePK
   * @version 4.2
   */

  /**
   * Constructs a new <code>AttributePK</code>.
   * @alias module:model/AttributePK
   * @class
   */
  var exports = function() {
    var _this = this;





  };

  /**
   * Constructs a <code>AttributePK</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AttributePK} obj Optional instance to populate.
   * @return {module:model/AttributePK} The populated <code>AttributePK</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('projectId')) {
        obj['projectId'] = ApiClient.convertToType(data['projectId'], 'String');
      }
      if (data.hasOwnProperty('domainId')) {
        obj['domainId'] = ApiClient.convertToType(data['domainId'], 'String');
      }
      if (data.hasOwnProperty('dimensionId')) {
        obj['dimensionId'] = ApiClient.convertToType(data['dimensionId'], 'String');
      }
      if (data.hasOwnProperty('attributeId')) {
        obj['attributeId'] = ApiClient.convertToType(data['attributeId'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {String} projectId
   */
  exports.prototype['projectId'] = undefined;
  /**
   * @member {String} domainId
   */
  exports.prototype['domainId'] = undefined;
  /**
   * @member {String} dimensionId
   */
  exports.prototype['dimensionId'] = undefined;
  /**
   * @member {String} attributeId
   */
  exports.prototype['attributeId'] = undefined;



  return exports;
}));


