/**
 * Bouquet
 * This is Bouquet API
 *
 * OpenAPI spec version: 4.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ProjectPK'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ProjectPK'));
  } else {
    // Browser globals (root is window)
    if (!root.Bouquet) {
      root.Bouquet = {};
    }
    root.Bouquet.QueryWorkerJobStatus = factory(root.Bouquet.ApiClient, root.Bouquet.ProjectPK);
  }
}(this, function(ApiClient, ProjectPK) {
  'use strict';




  /**
   * The QueryWorkerJobStatus model module.
   * @module model/QueryWorkerJobStatus
   * @version 4.2
   */

  /**
   * Constructs a new <code>QueryWorkerJobStatus</code>.
   * @alias module:model/QueryWorkerJobStatus
   * @class
   */
  var exports = function() {
    var _this = this;














  };

  /**
   * Constructs a <code>QueryWorkerJobStatus</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/QueryWorkerJobStatus} obj Optional instance to populate.
   * @return {module:model/QueryWorkerJobStatus} The populated <code>QueryWorkerJobStatus</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
      if (data.hasOwnProperty('userID')) {
        obj['userID'] = ApiClient.convertToType(data['userID'], 'String');
      }
      if (data.hasOwnProperty('projectPK')) {
        obj['projectPK'] = ProjectPK.constructFromObject(data['projectPK']);
      }
      if (data.hasOwnProperty('jobID')) {
        obj['jobID'] = ApiClient.convertToType(data['jobID'], 'String');
      }
      if (data.hasOwnProperty('key')) {
        obj['key'] = ApiClient.convertToType(data['key'], 'String');
      }
      if (data.hasOwnProperty('start')) {
        obj['start'] = ApiClient.convertToType(data['start'], 'Number');
      }
      if (data.hasOwnProperty('elapse')) {
        obj['elapse'] = ApiClient.convertToType(data['elapse'], 'Number');
      }
      if (data.hasOwnProperty('lineRead')) {
        obj['lineRead'] = ApiClient.convertToType(data['lineRead'], 'Number');
      }
      if (data.hasOwnProperty('chunks')) {
        obj['chunks'] = ApiClient.convertToType(data['chunks'], 'Number');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Number');
      }
      if (data.hasOwnProperty('startTime')) {
        obj['startTime'] = ApiClient.convertToType(data['startTime'], 'String');
      }
      if (data.hasOwnProperty('sql')) {
        obj['sql'] = ApiClient.convertToType(data['sql'], 'String');
      }
      if (data.hasOwnProperty('elaspeTime')) {
        obj['elaspeTime'] = ApiClient.convertToType(data['elaspeTime'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {module:model/QueryWorkerJobStatus.StatusEnum} status
   */
  exports.prototype['status'] = undefined;
  /**
   * @member {String} userID
   */
  exports.prototype['userID'] = undefined;
  /**
   * @member {module:model/ProjectPK} projectPK
   */
  exports.prototype['projectPK'] = undefined;
  /**
   * @member {String} jobID
   */
  exports.prototype['jobID'] = undefined;
  /**
   * @member {String} key
   */
  exports.prototype['key'] = undefined;
  /**
   * @member {Number} start
   */
  exports.prototype['start'] = undefined;
  /**
   * @member {Number} elapse
   */
  exports.prototype['elapse'] = undefined;
  /**
   * @member {Number} lineRead
   */
  exports.prototype['lineRead'] = undefined;
  /**
   * @member {Number} chunks
   */
  exports.prototype['chunks'] = undefined;
  /**
   * @member {Number} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {String} startTime
   */
  exports.prototype['startTime'] = undefined;
  /**
   * @member {String} sql
   */
  exports.prototype['sql'] = undefined;
  /**
   * @member {String} elaspeTime
   */
  exports.prototype['elaspeTime'] = undefined;


  /**
   * Allowed values for the <code>status</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StatusEnum = {
    /**
     * value: "EXECUTING"
     * @const
     */
    "EXECUTING": "EXECUTING",
    /**
     * value: "READING"
     * @const
     */
    "READING": "READING",
    /**
     * value: "INDEXING"
     * @const
     */
    "INDEXING": "INDEXING"  };


  return exports;
}));


